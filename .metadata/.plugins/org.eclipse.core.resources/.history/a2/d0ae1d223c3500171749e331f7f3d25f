package cn.it;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Collection;
import java.util.Properties;

/*我们的要求把Jdbc用到的东西封装起来
*/
public class Demo {
	
	//定义一些常量
	private static final String DRIVER;
	private static final String URL;
	private static final String USERNAME;
	private static final String PASSWORD;
	
	static{
		//创建Properties对象
		Properties p=new Properties();
		//载入数据
		try {
			p.load(new FileInputStream("D:/workspace/day5_10/jdbc.properties"));
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		DRIVER=p.getProperty("DRIVER");
		URL=p.getProperty("URL");
		USERNAME=p.getProperty("USERNAME");
		PASSWORD=p.getProperty("PASSWORD");
	}
	
	static{
		//注册驱动
				try {
					Class.forName(DRIVER);
				} catch (ClassNotFoundException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
	}
	//创建一个静态的方法获得数据库链接对象
	public static Connection getconn() {
		
		//获得连接对象
		Connection conn=null;
		try {
			conn = DriverManager.getConnection(URL, USERNAME,PASSWORD);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return conn;
	}
	//创建一个关闭资源的方法
	public static void Close(Connection conn,Statement stat,ResultSet re){
		
//		关闭资源前要首先判断是否为null
		if(re!=null){
			try {
				re.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		if(stat!=null){
			try {
				stat.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		if(conn!=null){
			try {
				conn.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
		
		
	}
//	由于有些操作没有结果集所以重载方法
	public static void Close(Connection conn,Statement stat){
		
//		关闭资源前要首先判断是否为null

		if(stat!=null){
			try {
				stat.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		if(conn!=null){
			try {
				conn.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
		
		
	}

}
