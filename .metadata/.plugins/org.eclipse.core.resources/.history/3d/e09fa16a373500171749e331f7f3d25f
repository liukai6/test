package cn.it;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Collection;

/*我们的要求把Jdbc用到的东西封装起来
*/
public class Demo {
	
	static{
		//注册驱动
				try {
					Class.forName("com.mysql.jdbc.Driver");
				} catch (ClassNotFoundException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
	}
	//创建一个静态的方法获得数据库链接对象
	public static Connection getconn() {
		
		//获得连接对象
		Connection conn=null;
		try {
			conn = DriverManager.getConnection("jdbc:mysql:///demo", "root", "root");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return conn;
	}
	//创建一个关闭资源的方法
	public static void Close(Connection conn,Statement stat,ResultSet re){
		
//		关闭资源前要首先判断是否为null
		if(re!=null){
			try {
				re.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		if(stat!=null){
			try {
				stat.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		if(conn!=null){
			try {
				conn.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
		
		
	}
//	由于有些操作没有结果集所以重载方法
	public static void Close(Connection conn,Statement stat){
		
//		关闭资源前要首先判断是否为null

		if(stat!=null){
			try {
				stat.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		if(conn!=null){
			try {
				conn.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
		
		
	}

}
